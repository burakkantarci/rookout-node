{"version":3,"sources":["../../src/TriggerServices.js"],"names":["TriggerServices","constructor","services","loadServices","getService","name","removeAug","augId","reapplyAugAfterTemporaryRemoval","aug","removeAugTemporarily","clearAugs","Object","keys","start","close","servicesToClose","values","service","DebuggerService","e","logger","exception"],"mappings":";;;;;;;AAAA;;AAEA;;AAGe,MAAMA,eAAN,CAAsB;AAEjCC,EAAAA,WAAW,GAAG;AACV,SAAKC,QAAL,GAAgB,EAAhB;AAEA,SAAKC,YAAL;AACH;;AAEDC,EAAAA,UAAU,CAACC,IAAD,EAAO;AACb,WAAO,KAAKH,QAAL,CAAcG,IAAd,CAAP;AACH;;AAEDC,EAAAA,SAAS,CAACC,KAAD,EAAQ;AACb,SAAK,IAAIF,IAAT,IAAiB,KAAKH,QAAtB,EAAgC;AAC5B,WAAKA,QAAL,CAAcG,IAAd,EAAoBC,SAApB,CAA8BC,KAA9B;AACH;AACJ;;AAEDC,EAAAA,+BAA+B,CAACC,GAAD,EAAM;AACjC,SAAK,IAAIJ,IAAT,IAAiB,KAAKH,QAAtB,EAAgC;AAC5B,WAAKA,QAAL,CAAcG,IAAd,EAAoBG,+BAApB,CAAoDC,GAApD;AACH;AACJ;;AAEDC,EAAAA,oBAAoB,CAACH,KAAD,EAAQ;AACxB,SAAK,IAAIF,IAAT,IAAiB,KAAKH,QAAtB,EAAgC;AAC5B,WAAKA,QAAL,CAAcG,IAAd,EAAoBK,oBAApB,CAAyCH,KAAzC;AACH;AACJ;;AAEDI,EAAAA,SAAS,GAAG;AACR,SAAK,IAAIN,IAAT,IAAiBO,MAAM,CAACC,IAAP,CAAY,KAAKX,QAAjB,CAAjB,EAA6C;AACzC,WAAKA,QAAL,CAAcG,IAAd,EAAoBM,SAApB;AACH;AACJ;;AAEDG,EAAAA,KAAK,GAAG;AACJ,SAAKX,YAAL;AACH;;AAED,QAAMY,KAAN,GAAc;AACV,UAAMC,eAAe,GAAG,CAAC,GAAGJ,MAAM,CAACK,MAAP,CAAc,KAAKf,QAAnB,CAAJ,CAAxB;AACA,SAAKA,QAAL,GAAgB,EAAhB;;AACA,SAAK,IAAIgB,OAAT,IAAoBF,eAApB,EAAqC;AACjC,YAAME,OAAO,CAACH,KAAR,EAAN;AACH;AAEJ;;AAEDZ,EAAAA,YAAY,GAAG;AACX,QAAI;AACA,WAAKD,QAAL,CAAc,iBAAd,IAAmC,IAAIiB,gCAAJ,EAAnC;AACH,KAFD,CAEE,OAAOC,CAAP,EAAU;AACRC,qBAAOC,SAAP,CAAiB,wCAAjB,EAA2DF,CAA3D;AACH,KALU,CAOX;;AACH;;AAzDgC","sourcesContent":["import {DebuggerService} from \"./services/DebuggerService\";\r\n\r\nimport {logger} from \"./logger\";\r\n\r\n\r\nexport default class TriggerServices {\r\n\r\n    constructor() {\r\n        this.services = {};\r\n\r\n        this.loadServices();\r\n    }\r\n\r\n    getService(name) {\r\n        return this.services[name];\r\n    }\r\n\r\n    removeAug(augId) {\r\n        for (let name in this.services) {\r\n            this.services[name].removeAug(augId);\r\n        }\r\n    }\r\n\r\n    reapplyAugAfterTemporaryRemoval(aug) {\r\n        for (let name in this.services) {\r\n            this.services[name].reapplyAugAfterTemporaryRemoval(aug);\r\n        }\r\n    }\r\n\r\n    removeAugTemporarily(augId) {\r\n        for (let name in this.services) {\r\n            this.services[name].removeAugTemporarily(augId);\r\n        }\r\n    }\r\n\r\n    clearAugs() {\r\n        for (let name of Object.keys(this.services)) {\r\n            this.services[name].clearAugs();\r\n        }\r\n    }\r\n\r\n    start() {\r\n        this.loadServices();\r\n    }\r\n\r\n    async close() {\r\n        const servicesToClose = [...Object.values(this.services)];\r\n        this.services = {};\r\n        for (let service of servicesToClose) {\r\n            await service.close();\r\n        }\r\n\r\n    }\r\n\r\n    loadServices() {\r\n        try {\r\n            this.services['DebuggerService'] = new DebuggerService();\r\n        } catch (e) {\r\n            logger.exception(\"Error starting location based services\", e);\r\n        }\r\n\r\n        // FUTURE - init logging service\r\n    }\r\n\r\n}\r\n"],"file":"TriggerServices.js"}