{"version":3,"sources":["../../../src/services/InspectorDebug.js"],"names":["inspector","require","url","rook","config","InspectorDebug","constructor","userLine","scriptLoaded","getScript","dbgService","isElectron","verifyInspectFlagEnabledUnderElectron","verifyNoDebuggerConnected","self","getScriptCallback","positionsToBreakpoints","breakpointsToPositions","loadedScriptsCount","maxLoadedScripts","parseInt","process","env","ROOKOUT_MAX_SCRIPTS","initialSessionStartTime","Date","startSession","session","Session","connect","e","RookInspectorConnectFailed","post","on","script","MAX_SCRIPT_COUNT_INIT_TIME","savedOptions","restart","catch","logger","exception","scriptURL","params","startsWith","fileURLToPath","undefined","scriptId","err","scriptSource","error","message","pos","hitBreakpoints","InspectorFrameNamespace","callFrames","InspectorStackNamespace","active","RookOtherDebuggerConnected","processArguments","argv","toString","includes","RookElectronInspectFlagNotSet","close","setBreak","aug","result","filename","pathToFileURL","key","augId","info","__rookout_backchannel","create","lineNumber","lineno","columnNumber","column","response","RookInspectorSetBreakpointFailed","toKey","breakpointId","clearBreak","clearAllBreaks","positions","Object","keys","Promise","all","map","position","message_id","cb","resolve","myCb","args","Error","getProperties","object","ownProperties","objectId","value","RookInspectorFailedToGetObject","disconnect","scripts"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nconst inspector = require('inspector');\r\nconst url = require('url');\r\n\r\nimport {logger} from \"../logger\";\r\n\r\nimport {\r\n    RookInspectorSetBreakpointFailed,\r\n    RookInspectorConnectFailed,\r\n    RookElectronInspectFlagNotSet, RookOtherDebuggerConnected\r\n} from '../exceptions'\r\n\r\nimport {isBlackListedModule} from \"./IgnoredNodeModules\";\r\n\r\nimport InspectorFrameNamespace from \"../processor/namespaces/InspectorFrameNamespace\";\r\nimport InspectorStackNamespace from \"../processor/namespaces/InspectorStackNamespace\";\r\nconst rook = require(\"../index\");\r\nconst config = require(\"../config\");\r\n\r\nexport class InspectorDebug {\r\n    constructor(userLine, scriptLoaded, getScript, dbgService) {\r\n        if (InspectorDebug.isElectron()) {\r\n            InspectorDebug.verifyInspectFlagEnabledUnderElectron();\r\n        } else {\r\n            // Setting the --inspect CLI flag means the inspector will be active, so we can't\r\n            // run this verification in that case.\r\n            InspectorDebug.verifyNoDebuggerConnected();\r\n        }\r\n\r\n        const self = this;\r\n\r\n        this.getScriptCallback = getScript;\r\n        this.userLine = userLine;\r\n        this.scriptLoaded = scriptLoaded;\r\n        this.dbgService = dbgService;\r\n\r\n        this.positionsToBreakpoints = {};\r\n        this.breakpointsToPositions = {};\r\n        this.loadedScriptsCount = 0;\r\n        this.maxLoadedScripts = parseInt(process.env.ROOKOUT_MAX_SCRIPTS) || 20000;\r\n\r\n        this.initialSessionStartTime = new Date();\r\n        this.startSession();\r\n    }\r\n\r\n    async startSession() {\r\n        this.session = new inspector.Session();\r\n\r\n        try {\r\n            this.session.connect();\r\n        } catch (e) {\r\n            throw new RookInspectorConnectFailed(e);\r\n        }\r\n\r\n        const self = this;\r\n        // Scripts may not be released just by restarting a session, so collect garbage\r\n        // immediately after starting a session\r\n        this.session.post('HeapProfiler.collectGarbage');\r\n\r\n        this.session.on('Debugger.scriptParsed', (script) => {\r\n            if (self.session === null) {\r\n                return;\r\n            }\r\n\r\n            try {\r\n                if ((new Date() - this.initialSessionStartTime) < config.MAX_SCRIPT_COUNT_INIT_TIME) {\r\n                    self.maxLoadedScripts++;\r\n                }\r\n                self.loadedScriptsCount++;\r\n                if (self.loadedScriptsCount > self.maxLoadedScripts && rook.savedOptions !== null) {\r\n\r\n                    this.dbgService.restart().catch(() => logger.exception(\"Failed to restart\"))\r\n                    return;\r\n\r\n                }\r\n\r\n                let scriptURL = script.params.url;\r\n                if (scriptURL === \"\") {\r\n                    return;\r\n                }\r\n\r\n                // URLs instead of paths started in 10.12 which also introduced this\r\n                // url.fileURLToPath. We assume we will not receive URLs before 10.12\r\n                if (scriptURL.startsWith(\"file:\") && url.fileURLToPath !== undefined) {\r\n                    scriptURL = url.fileURLToPath(scriptURL);\r\n                }\r\n\r\n                if (isBlackListedModule(scriptURL)) {\r\n                    return;\r\n                }\r\n\r\n\r\n                self.post('Debugger.getScriptSource', {scriptId: script.params.scriptId}, (err, scriptSource) => {\r\n                    if (err) {\r\n                        logger.exception(\"Failed to get script source\", err);\r\n                        return;\r\n                    }\r\n\r\n                    try {\r\n                        self.scriptLoaded(script.params.scriptId, scriptURL, scriptSource.scriptSource);\r\n                    } catch (error) {\r\n                        logger.exception(\"Exception when processing script source callback\", error);\r\n                    }\r\n                });\r\n            } catch (error) {\r\n                logger.exception(\"Exception when processing script parse callback\", error);\r\n            }\r\n        });\r\n\r\n        this.session.on('Debugger.paused', (message) => {\r\n            if (self.session === null) {\r\n                return;\r\n            }\r\n\r\n            try {\r\n                const pos = self.breakpointsToPositions[message.params.hitBreakpoints[0]];\r\n                if (!pos) {\r\n                    logger.error(\"Aug not found! %s\", message.params.hitBreakpoints[0])\r\n                } else {\r\n                    self.userLine(pos,\r\n                      new InspectorFrameNamespace(self, message.params.callFrames[0]),\r\n                      new InspectorStackNamespace(self, message.params.callFrames));\r\n                }\r\n            } catch (error) {\r\n                logger.exception(error);\r\n            } finally {\r\n                this.post(\"Debugger.resume\");\r\n            }\r\n        });\r\n\r\n        this.session.on('error', (error) => {\r\n            try {\r\n                logger.exception('InspectorDebugger error', error);\r\n            } catch (e) {\r\n\r\n            }\r\n        });\r\n\r\n        await this.post('Debugger.enable');\r\n        await this.post('Debugger.setBreakpointsActive', {active: true});\r\n    }\r\n\r\n    static verifyNoDebuggerConnected() {\r\n        // inspector.url doesn't exist in node.js v8.0.0 - it was added in v8.1.0\r\n        // (although the docs would have you believe it's support in v8.x)\r\n        if (inspector.url !== undefined && inspector.url() !== undefined) {\r\n            throw new RookOtherDebuggerConnected();\r\n        }\r\n    }\r\n\r\n    //NOTE:: if inspect is not specified under electron, inspector api will fail to load\r\n    //NOTE:: its important that this function will happen here and not in the InspectorDebug\r\n    //          since we actually want to fail if inspect is not specified\r\n    static verifyInspectFlagEnabledUnderElectron() {\r\n        let processArguments = process.argv.toString();\r\n        if (!processArguments.includes('--inspect')) {\r\n            throw new RookElectronInspectFlagNotSet();\r\n        }\r\n    }\r\n\r\n    static isElectron() {\r\n        return process.argv.toString().includes('electron');\r\n    }\r\n\r\n    async restart() {\r\n        await this.close();\r\n\r\n        this.loadedScriptsCount = 0;\r\n        this.startSession();\r\n    }\r\n\r\n    setBreak(pos, aug) {\r\n        let result = {};\r\n\r\n        let scriptURL = pos.filename;\r\n\r\n        if (url.pathToFileURL !== undefined) {\r\n            scriptURL = url.pathToFileURL(scriptURL);\r\n        }\r\n\r\n        let key = 'aug-' + aug.augId;\r\n        let info = process.__rookout_backchannel.create(key);\r\n        info.aug = aug;\r\n\r\n        this.post(\r\n            'Debugger.setBreakpointByUrl', {\r\n                url: scriptURL,\r\n                lineNumber: pos.lineno - 1,\r\n                columnNumber: pos.column + 1\r\n            },\r\n            (error, response) => {\r\n                result.error = error;\r\n                result.response = response;\r\n        });\r\n\r\n        if (null != result.error) {\r\n            throw new RookInspectorSetBreakpointFailed(result.error);\r\n        }\r\n\r\n        this.positionsToBreakpoints[pos.toKey()] = result.response.breakpointId;\r\n        this.breakpointsToPositions[result.response.breakpointId] = pos;\r\n    }\r\n\r\n    async clearBreak(pos) {\r\n        // If we have an object, hash it\r\n        if (pos.toKey) {\r\n            pos = pos.toKey();\r\n        }\r\n\r\n        const breakpointId = this.positionsToBreakpoints[pos];\r\n        if (undefined === breakpointId) {\r\n            return;\r\n        }\r\n\r\n        delete this.positionsToBreakpoints[pos];\r\n        delete this.breakpointsToPositions[breakpointId];\r\n\r\n        let result = {};\r\n        await this.post(\r\n          'Debugger.removeBreakpoint', {breakpointId: breakpointId}, (error) => {\r\n              result.error = error;\r\n          }\r\n        );\r\n\r\n        if (null != result.error) {\r\n            logger.error(\"Failed to remove breakpoint\", result.error);\r\n        }\r\n    }\r\n\r\n    async clearAllBreaks() {\r\n        let positions = Object.keys(this.positionsToBreakpoints);\r\n\r\n        await Promise.all(positions.map(position => this.clearBreak(position)))\r\n\r\n        this.positionsToBreakpoints = {};\r\n        this.breakpointsToPositions = {};\r\n    }\r\n\r\n    post(message_id, params, cb) {\r\n        // Don't reject as the promise was added after-the-fact:\r\n        // there are many places in the code that won't catch rejected promises,\r\n        // which could crash user code.\r\n        // If you want to reject here, you first have to find all uses of post and adapt them\r\n        // to handle rejected promises.\r\n        return new Promise(resolve => {\r\n            const myCb = (...args) => {\r\n                if (cb !== undefined) {\r\n                    cb(...args);\r\n                }\r\n                resolve();\r\n            }\r\n\r\n            if (this.session === null) {\r\n                if (cb !== undefined) {\r\n                    cb(new Error(\"No debug session\"), null);\r\n                }\r\n\r\n                return;\r\n            }\r\n\r\n            this.session.post(message_id, params, myCb);\r\n        })\r\n    }\r\n\r\n    getProperties(object, ownProperties = true) {\r\n        let result = {};\r\n\r\n        this.post('Runtime.getProperties', {objectId: object.objectId,\r\n            ownProperties: ownProperties}, (error, value) => {\r\n            if (error) {\r\n                result.error = error;\r\n            } else {\r\n                result.value = value.result;\r\n            }\r\n        });\r\n\r\n        if (result.error) {\r\n            throw new RookInspectorFailedToGetObject(object);\r\n        }\r\n\r\n        return result.value;\r\n    }\r\n\r\n    getScript(scriptId) {\r\n        return this.getScriptCallback(scriptId);\r\n    }\r\n\r\n    async close() {\r\n        if (this.session) {\r\n            await this.clearAllBreaks();\r\n\r\n            await this.post('Debugger.setBreakpointsActive', { active: false });\r\n            await this.post('Debugger.disable');\r\n            await this.post('Debugger.resume'); // just in case\r\n            this.session.disconnect();\r\n            this.session = null;\r\n        }\r\n    }\r\n\r\n    scripts() {\r\n        return [];\r\n    }\r\n\r\n}\r\n"],"file":"InspectorDebug.js"}