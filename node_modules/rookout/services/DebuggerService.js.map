{"version":3,"sources":["../../../src/services/DebuggerService.js"],"names":["assert","require","path","config","fs","CryptoJS","SHA256","Pos","constructor","filename","lineno","column","toKey","ScriptNotifier","debug","pendingNotifications","scripts","setDebug","loadScripts","clearTrackedScripts","getAllMatchInfoByFilename","fileName","includeExternals","matchesInfos","scriptId","Object","keys","script","matchInfo","getMatchInfo","push","getScriptObjectById","hasOwnProperty","getFileContentFromMap","fileContent","sourceFiles","undefined","sourceFile","rawSource","e","registerNotification","aug","fileHash","callback","removed","augId","execute","matchInfos","length","basename","originalFilename","normalizedPath","split","join","isJsFile","endsWith","suggestedFileName","readFileSync","replace","currentFileHash","toString","enc","Hex","sendWarning","RookError","RookSourceFilePathSuggestion","addScript","source","scriptWrapper","ScriptWrapper","notification","removeAug","clearAugs","augIds","AugHolder","breakpoints","positions","executeAugs","pos","frame","stack","augs","logger","error","addAug","info","setBreak","setActive","reapplyAugAfterTemporaryRemoval","removeAugTemporarily","clearBreak","currentAugs","augsToKeep","augsToDelete","setRemoved","clearAllBreaks","DebuggerService","augHolder","scriptNotifier","restarting","close","start","notEqual","inSourceMap","getGeneratedPosition","line","self","getDebugger","restart","sleep","duration","Promise","resolve","setTimeout","user_line","scriptLoaded","getScript","engine","selectEngine","InspectorDebug","RookUnsupportedEngineSelection","InstrumentationConfig","ENGINE","versions","process","version","major","parseInt","substr","RookUnsupportedNodeVersion"],"mappings":"AAAA;;;;;;;AAEA;;AAKA;;AACA;;AACA;;AAEA;;AAOA;;;;AAdA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AAOA,MAAME,MAAM,GAAGF,OAAO,CAAC,WAAD,CAAtB;;AAEA,MAAMG,EAAE,GAAGH,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMI,QAAQ,GAAGJ,OAAO,CAAC,WAAD,CAAxB;;AACA,MAAMK,MAAM,GAAGL,OAAO,CAAC,kBAAD,CAAtB;;AAMA;AACA,MAAMM,GAAN,CAAU;AAENC,EAAAA,WAAW,CAACC,QAAD,EAAWC,MAAX,EAAmBC,MAAnB,EAA2B;AAClC,SAAKF,QAAL,GAAgBA,QAAhB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,MAAL,GAAcA,MAAd;AACH;;AAEDC,EAAAA,KAAK,GAAG;AACJ,WAAO,KAAKH,QAAL,GAAgB,GAAhB,GAAsB,KAAKC,MAA3B,GAAoC,GAApC,GAA0C,KAAKC,MAAtD;AACH;;AAVK;;AAaV,MAAME,cAAN,CAAqB;AAEjBL,EAAAA,WAAW,GAAG;AACV,SAAKM,KAAL,GAAa,IAAb;AAEA,SAAKC,oBAAL,GAA4B,EAA5B;AAEA,SAAKC,OAAL,GAAe,EAAf;AACH;;AAEDC,EAAAA,QAAQ,CAACH,KAAD,EAAQ;AACZ,SAAKA,KAAL,GAAaA,KAAb;AACA,SAAKI,WAAL;AACH;;AAEDC,EAAAA,mBAAmB,GAAG;AAClB,SAAKH,OAAL,GAAe,EAAf;AACH;;AAEDI,EAAAA,yBAAyB,CAACC,QAAD,EAAWC,gBAAgB,GAAG,KAA9B,EAAqC;AAC1DD,IAAAA,QAAQ,GAAG,6BAAiBA,QAAjB,CAAX;AAEA,QAAIE,YAAY,GAAG,EAAnB;;AACA,SAAK,IAAIC,QAAT,IAAqBC,MAAM,CAACC,IAAP,CAAY,KAAKV,OAAjB,CAArB,EAAgD;AAC5C,YAAMW,MAAM,GAAG,KAAKX,OAAL,CAAaQ,QAAb,CAAf;AACA,YAAMI,SAAS,GAAGD,MAAM,CAACE,YAAP,CAAoBR,QAApB,EAA8BC,gBAA9B,CAAlB;;AACA,UAAI,SAASM,SAAb,EAAwB;AACpBL,QAAAA,YAAY,CAACO,IAAb,CAAkBF,SAAlB;AACH;AACJ;;AAED,WAAOL,YAAP;AACH;;AAEDQ,EAAAA,mBAAmB,CAACP,QAAD,EAAW;AAC1B,QAAI,KAAKR,OAAL,CAAagB,cAAb,CAA4BR,QAA5B,CAAJ,EAA2C;AACvC,aAAO,KAAKR,OAAL,CAAaQ,QAAb,CAAP;AACH,KAFD,MAEO;AACH,aAAO,IAAP;AACH;AACJ;;AAEDS,EAAAA,qBAAqB,CAACN,MAAD,EAAS;AAC1B,QAAI;AACA,UAAIO,WAAW,GAAG,IAAlB;;AAEA,UAAIP,MAAM,CAACQ,WAAP,KAAuB,IAAvB,IAA+BR,MAAM,CAACQ,WAAP,KAAuBC,SAA1D,EAAqE;AACjE,eAAO,IAAP;AACH;;AAED,WAAK,IAAIC,UAAT,IAAuBV,MAAM,CAACQ,WAA9B,EAA2C;AACvCD,QAAAA,WAAW,GAAGG,UAAU,CAACC,SAAzB;AACA;AACH;;AAED,UAAIJ,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAKE,SAA5C,EAAuD;AACnD,eAAO,IAAP;AACH;;AAED,aAAOF,WAAP;AACH,KAjBD,CAiBE,OAAOK,CAAP,EAAU;AACR,aAAO,IAAP;AACH;AACJ;;AAEDC,EAAAA,oBAAoB,CAACC,GAAD,EAAMpB,QAAN,EAAgBqB,QAAhB,EAA0BpB,gBAA1B,EAA4CqB,QAA5C,EAAsDC,OAAtD,EAA+D;AAC/EvB,IAAAA,QAAQ,GAAG,6BAAiBA,QAAjB,CAAX;AAEA,SAAKN,oBAAL,CAA0B0B,GAAG,CAACI,KAA9B,IAAuC;AACnCJ,MAAAA,GAAG,EAAGA,GAD6B;AAEnCpB,MAAAA,QAAQ,EAAEA,QAFyB;AAGnCC,MAAAA,gBAAgB,EAAEA,gBAHiB;AAInCwB,MAAAA,OAAO,EAAGH,QAJyB;AAKnCC,MAAAA,OAAO,EAAGA,OALyB;AAMnCF,MAAAA,QAAQ,EAAEA;AANyB,KAAvC;AASA,UAAMK,UAAU,GAAG,KAAK3B,yBAAL,CAA+BC,QAA/B,EAAyCC,gBAAzC,CAAnB;;AACA,SAAK,IAAIM,SAAT,IAAsBmB,UAAtB,EAAiC;AAC7BJ,MAAAA,QAAQ,CAACf,SAAD,CAAR;AACH;;AAED,QAAImB,UAAU,CAACC,MAAX,KAAsB,CAA1B,EAA6B;AACzB,UAAIvC,QAAQ,GAAGP,IAAI,CAAC+C,QAAL,CAAc5B,QAAd,CAAf;;AACA,WAAK,IAAIG,QAAT,IAAqBC,MAAM,CAACC,IAAP,CAAY,KAAKV,OAAjB,CAArB,EAAgD;AAC5C,cAAMW,MAAM,GAAG,KAAKX,OAAL,CAAaQ,QAAb,CAAf;AAEA,YAAI0B,gBAAgB,GAAG,EAAvB;;AACA,aAAK,IAAIb,UAAT,IAAuBV,MAAM,CAACQ,WAA9B,EAA2C;AACvC;AACAe,UAAAA,gBAAgB,GAAGb,UAAU,CAACc,cAAX,CAA0BC,KAA1B,CAAgC,KAAhC,EAAuCC,IAAvC,CAA4C,EAA5C,EAAgDD,KAAhD,CAAsD,IAAtD,EAA4DC,IAA5D,CAAiE,EAAjE,EAAqED,KAArE,CAA2E,MAA3E,EAAmFC,IAAnF,CAAwF,EAAxF,EAA4FD,KAA5F,CAAkG,KAAlG,EAAyGC,IAAzG,CAA8G,EAA9G,CAAnB;AACA;AACH;;AAED,YAAIC,QAAQ,GAAG3B,MAAM,CAAClB,QAAP,CAAgB8C,QAAhB,CAAyB,IAAzB,MAAmCL,gBAAgB,KAAK,EAArB,IAA2BA,gBAAgB,CAACK,QAAjB,CAA0B,IAA1B,CAA9D,CAAf;;AAEA,YAAIrD,IAAI,CAAC+C,QAAL,CAActB,MAAM,CAAClB,QAArB,MAAmCA,QAAnC,IAA+CP,IAAI,CAAC+C,QAAL,CAAcC,gBAAd,MAAoCzC,QAAvF,EAAiG;AAC7F,cAAIyB,WAAJ;AACA,cAAIsB,iBAAiB,GAAGN,gBAAxB;;AACA,cAAI;AACA;AACAhB,YAAAA,WAAW,GAAG,KAAKD,qBAAL,CAA2BN,MAA3B,CAAd;;AACA,gBAAIO,WAAW,KAAK,IAApB,EAA0B;AACtB,kBAAIoB,QAAJ,EAAc;AACV;AACApB,gBAAAA,WAAW,GAAG9B,EAAE,CAACqD,YAAH,CAAgB9B,MAAM,CAAClB,QAAvB,EAAiC,MAAjC,CAAd;AACA+C,gBAAAA,iBAAiB,GAAG7B,MAAM,CAAClB,QAA3B;AACH,eAJD,MAIO;AACH;AACH;AACJ;AACJ,WAZD,CAYE,OAAO8B,CAAP,EAAU;AACR;AACH;;AAEDL,UAAAA,WAAW,GAAGA,WAAW,CAACwB,OAAZ,CAAoB,iBAApB,EAAuC,IAAvC,CAAd;AACA,gBAAMC,eAAe,GAAGrD,MAAM,CAAC4B,WAAD,CAAN,CAAoB0B,QAApB,CAA6BvD,QAAQ,CAACwD,GAAT,CAAaC,GAA1C,CAAxB;;AAEA,cAAIpB,QAAQ,KAAKiB,eAAjB,EAAkC;AAC9BlB,YAAAA,GAAG,CAACsB,WAAJ,CAAgB,IAAIC,kBAAJ,CAAc,IAAIC,wCAAJ,CAAiC5C,QAAjC,EAA2CmC,iBAA3C,CAAd,CAAhB;AACA;AACH;AACJ;AACJ;AACJ;AACJ;;AAEDtC,EAAAA,WAAW,GAAG;AACV,SAAK,IAAIS,MAAT,IAAmB,KAAKb,KAAL,CAAWE,OAAX,EAAnB,EAAyC;AACrC,WAAKkD,SAAL,CAAevC,MAAM,CAACH,QAAtB,EAAgCG,MAAM,CAAClB,QAAvC,EAAiDkB,MAAM,CAACwC,MAAxD;AACH;AACJ;;AAEDD,EAAAA,SAAS,CAAC1C,QAAD,EAAWf,QAAX,EAAqB0D,MAArB,EAA6B;AAClC,QAAI,QAAQ1D,QAAR,IAAoB,OAAOA,QAA3B,IAAuC,KAAKO,OAAL,CAAagB,cAAb,CAA4BR,QAA5B,CAA3C,EAAkF;AAC9E;AACH;;AAED,UAAM4C,aAAa,GAAG,IAAIC,sBAAJ,CAAkB7C,QAAlB,EAA4Bf,QAA5B,EAAsC0D,MAAtC,CAAtB;;AAEA,SAAK,IAAItB,KAAT,IAAkBpB,MAAM,CAACC,IAAP,CAAY,KAAKX,oBAAjB,CAAlB,EAA0D;AACtD,UAAIuD,YAAY,GAAG,KAAKvD,oBAAL,CAA0B8B,KAA1B,CAAnB;AACA,YAAMjB,SAAS,GAAGwC,aAAa,CAACvC,YAAd,CAA2ByC,YAAY,CAACjD,QAAxC,EAAkDiD,YAAY,CAAChD,gBAA/D,CAAlB;;AACA,UAAI,SAASM,SAAb,EAAwB;AACpB0C,QAAAA,YAAY,CAACxB,OAAb,CAAqBlB,SAArB;AACH,OAFD,MAEO;AACH,YAAI1B,IAAI,CAAC+C,QAAL,CAAcxC,QAAd,MAA4BP,IAAI,CAAC+C,QAAL,CAAcqB,YAAY,CAACjD,QAA3B,CAAhC,EAAsE;AAClE,cAAIa,WAAW,GAAGiC,MAAM,CAACT,OAAP,CAAe,iBAAf,EAAkC,IAAlC,CAAlB;AACA,gBAAMC,eAAe,GAAGrD,MAAM,CAAC4B,WAAD,CAAN,CAAoB0B,QAApB,CAA6BvD,QAAQ,CAACwD,GAAT,CAAaC,GAA1C,CAAxB;;AAEA,cAAIQ,YAAY,CAAC5B,QAAb,KAA0BiB,eAA9B,EAA+C;AAC3CW,YAAAA,YAAY,CAAC7B,GAAb,CAAiBsB,WAAjB,CAA6B,IAAIC,kBAAJ,CAAc,IAAIC,wCAAJ,CAAiCK,YAAY,CAACjD,QAA9C,EAAwDZ,QAAxD,CAAd,CAA7B;AACH;AACJ;AACJ;AACJ;;AAED,SAAKO,OAAL,CAAaQ,QAAb,IAAyB4C,aAAzB;AACH;;AAEDG,EAAAA,SAAS,CAAC1B,KAAD,EAAQ;AACb,QAAIyB,YAAY,GAAG,KAAKvD,oBAAL,CAA0B8B,KAA1B,CAAnB;;AACA,QAAIT,SAAS,KAAKkC,YAAlB,EAAgC;AAC5BA,MAAAA,YAAY,CAAC1B,OAAb;AACA,aAAO,KAAK7B,oBAAL,CAA0B8B,KAA1B,CAAP;AACH;AACJ;;AAED2B,EAAAA,SAAS,GAAG;AACR,QAAIC,MAAM,GAAGhD,MAAM,CAACC,IAAP,CAAY,KAAKX,oBAAjB,CAAb;;AACA,SAAK,IAAI8B,KAAT,IAAkB4B,MAAlB,EAA0B;AACtB,WAAKF,SAAL,CAAe1B,KAAf;AACH;;AAED,SAAK9B,oBAAL,GAA4B,EAA5B;AACH;;AA/KgB;;AAmLrB,MAAM2D,SAAN,CAAgB;AAEZlE,EAAAA,WAAW,CAACM,KAAD,EAAQ;AACf,SAAKA,KAAL,GAAaA,KAAb;AAEA,SAAK6D,WAAL,GAAmB,EAAnB;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACH;;AAEDC,EAAAA,WAAW,CAACC,GAAD,EAAMC,KAAN,EAAaC,KAAb,EAAoB;AAC3B,QAAIC,IAAI,GAAG,KAAKN,WAAL,CAAiBG,GAAG,CAAClE,KAAJ,EAAjB,CAAX;;AAEA,QAAI,CAACqE,IAAL,EAAW;AACPC,qBAAOC,KAAP,CAAa,sBAAb,EAAqCL,GAAG,CAACrE,QAAzC,EAAmDqE,GAAG,CAACpE,MAAvD;AACH,KAFD,MAEO;AACH,WAAK,IAAI+B,GAAT,IAAgBwC,IAAhB,EAAsB;AAClBxC,QAAAA,GAAG,CAACK,OAAJ,CAAYiC,KAAZ,EAAmBC,KAAnB,EAA0B,EAA1B;AACH;AACJ;AACJ;;AAEDI,EAAAA,MAAM,CAAC3E,QAAD,EAAWC,MAAX,EAAmBC,MAAnB,EAA2B8B,GAA3B,EAAgC;AAClCyC,mBAAOG,IAAP,CAAY,gCAAZ,EAA8C5E,QAA9C,EAAwDC,MAAxD,EAAgEC,MAAhE;;AAEA,QAAImE,GAAG,GAAG,IAAIvE,GAAJ,CAAQ,6BAAiBE,QAAjB,CAAR,EAAoCC,MAApC,EAA4CC,MAA5C,CAAV;;AAEA,QAAI,KAAKgE,WAAL,CAAiB3C,cAAjB,CAAgC8C,GAAG,CAAClE,KAAJ,EAAhC,CAAJ,EAAkD;AAC9C,WAAK+D,WAAL,CAAiBG,GAAG,CAAClE,KAAJ,EAAjB,EAA8BkB,IAA9B,CAAmCW,GAAnC;AACH,KAFD,MAEO;AACH,WAAK3B,KAAL,CAAWwE,QAAX,CAAoBR,GAApB,EAAyBrC,GAAzB;AACA,WAAKkC,WAAL,CAAiBG,GAAG,CAAClE,KAAJ,EAAjB,IAA+B,CAAC6B,GAAD,CAA/B;AACH;;AAED,SAAKmC,SAAL,CAAenC,GAAG,CAACI,KAAnB,IAA4BiC,GAA5B;AACArC,IAAAA,GAAG,CAAC8C,SAAJ;AACH;;AAEDC,EAAAA,+BAA+B,CAAC/C,GAAD,EAAM;AACjC,QAAI,CAAC,KAAKmC,SAAL,CAAe5C,cAAf,CAA8BS,GAAG,CAACI,KAAlC,CAAL,EAA+C;AAC3C;AACH;;AAED,QAAIiC,GAAG,GAAG,KAAKF,SAAL,CAAenC,GAAG,CAACI,KAAnB,CAAV;AAEA,SAAK/B,KAAL,CAAWwE,QAAX,CAAoBR,GAApB,EAAyBrC,GAAzB;AACH;;AAEDgD,EAAAA,oBAAoB,CAAC5C,KAAD,EAAQ;AACxB,QAAI,CAAC,KAAK+B,SAAL,CAAe5C,cAAf,CAA8Ba,KAA9B,CAAL,EAA2C;AACvC;AACH;;AAED,QAAIiC,GAAG,GAAG,KAAKF,SAAL,CAAe/B,KAAf,CAAV;AAEA,SAAK/B,KAAL,CAAW4E,UAAX,CAAsBZ,GAAtB;AACH;;AAEDP,EAAAA,SAAS,CAAC1B,KAAD,EAAQ;AACb,QAAI,CAAC,KAAK+B,SAAL,CAAe5C,cAAf,CAA8Ba,KAA9B,CAAL,EAA2C;AACvC;AACH,KAHY,CAKb;;;AACA,QAAIiC,GAAG,GAAG,KAAKF,SAAL,CAAe/B,KAAf,CAAV;AAEA,QAAI8C,WAAW,GAAG,KAAKhB,WAAL,CAAiBG,GAAG,CAAClE,KAAJ,EAAjB,CAAlB,CARa,CAUb;;AACA,QAAIgF,UAAU,GAAG,EAAjB;AACA,QAAIC,YAAY,GAAG,EAAnB;;AACA,SAAK,IAAIpD,GAAT,IAAgBkD,WAAhB,EAA6B;AACzB,UAAIlD,GAAG,CAACI,KAAJ,KAAcA,KAAlB,EAAyB;AACrBgD,QAAAA,YAAY,CAAC/D,IAAb,CAAkBW,GAAlB;AACH,OAFD,MAEO;AACHmD,QAAAA,UAAU,CAAC9D,IAAX,CAAgBW,GAAhB;AACH;AACJ,KAnBY,CAqBb;;;AACA,QAAImD,UAAU,CAAC5C,MAAX,GAAoB,CAAxB,EAA2B;AACvB,WAAK2B,WAAL,CAAiBG,GAAG,CAAClE,KAAJ,EAAjB,IAAgCgF,UAAhC;AACH,KAFD,MAEO;AACH,WAAK9E,KAAL,CAAW4E,UAAX,CAAsBZ,GAAtB;AACA,aAAO,KAAKH,WAAL,CAAiBG,GAAG,CAAClE,KAAJ,EAAjB,CAAP;AACH,KA3BY,CA6Bb;;;AACA,SAAK,IAAI6B,GAAT,IAAgBoD,YAAhB,EAA8B;AAC1BpD,MAAAA,GAAG,CAACqD,UAAJ;AACH,KAhCY,CAkCb;;;AACA,WAAO,KAAKlB,SAAL,CAAe/B,KAAf,CAAP;AACH;;AAED,QAAM2B,SAAN,GAAkB;AACd,QAAIC,MAAM,GAAGhD,MAAM,CAACC,IAAP,CAAY,KAAKkD,SAAjB,CAAb;;AACA,SAAK,IAAI/B,KAAT,IAAkB4B,MAAlB,EAA0B;AACtB,WAAKF,SAAL,CAAe1B,KAAf;AACH;;AAED,SAAK8B,WAAL,GAAmB,EAAnB;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACA,UAAM,KAAK9D,KAAL,CAAWiF,cAAX,EAAN;AACH;;AAxGW;;AA2GT,MAAMC,eAAN,CAAsB;AAEzBxF,EAAAA,WAAW,GAAG;AACV,SAAKM,KAAL,GAAa,IAAb;AACA,SAAKmF,SAAL,GAAiB,IAAjB;AACA,SAAKC,cAAL,GAAsB,IAAtB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACH;;AAED,QAAMC,KAAN,GAAc;AACV,SAAK5B,SAAL;;AAEA,QAAI,SAAS,KAAK1D,KAAlB,EAAyB;AACrB,YAAMA,KAAK,GAAG,KAAKA,KAAnB;AACA,WAAKA,KAAL,GAAa,IAAb;AACA,YAAMA,KAAK,CAACsF,KAAN,EAAN;AACH;AACJ;;AAEDhB,EAAAA,MAAM,CAAC3E,QAAD,EAAWmB,SAAX,EAAsBlB,MAAtB,EAA8BC,MAA9B,EAAsC8B,GAAtC,EAA2C;AAC7C,SAAK4D,KAAL,GAD6C,CAG7C;;AACA,QAAI,SAASzE,SAAb,EAAwB;AACpBA,MAAAA,SAAS,GAAG,KAAKsE,cAAL,CAAoB9E,yBAApB,CAA8CX,QAA9C,EAAwD,CAAxD,CAAZ;AACAT,MAAAA,MAAM,CAACsG,QAAP,CAAgB1E,SAAhB,EAA2BQ,SAA3B,EAAsC,kBAAtC;AACH;;AAED,QAAIR,SAAS,CAAC2E,WAAd,EAA2B;AACvB;AACA,YAAMzB,GAAG,GAAGlD,SAAS,CAACD,MAAV,CAAiB6E,oBAAjB,CAAsC,8BAAU5E,SAAS,CAACnB,QAApB,CAAtC,EAAqEC,MAArE,EAA6EC,MAA7E,CAAZ;AACAD,MAAAA,MAAM,GAAGoE,GAAG,CAAC2B,IAAb;AACA9F,MAAAA,MAAM,GAAGmE,GAAG,CAACnE,MAAb;AACH;;AAED,SAAKsF,SAAL,CAAeb,MAAf,CAAsBxD,SAAS,CAACD,MAAV,CAAiBlB,QAAvC,EAAiDC,MAAjD,EAAyDC,MAAzD,EAAiE8B,GAAjE;AACH;;AAEDD,EAAAA,oBAAoB,CAACK,KAAD,EAAQxB,QAAR,EAAkBqB,QAAlB,EAA4BpB,gBAA5B,EAA8CqB,QAA9C,EAAwDC,OAAxD,EAAiE;AACjF,SAAKyD,KAAL;AAEA,SAAKH,cAAL,CAAoB1D,oBAApB,CAAyCK,KAAzC,EAAgDxB,QAAhD,EAA0DqB,QAA1D,EAAoEpB,gBAApE,EAAsFqB,QAAtF,EAAgGC,OAAhG;AACH;;AAED2B,EAAAA,SAAS,CAAC1B,KAAD,EAAQ;AACb,QAAI,SAAS,KAAKoD,SAAlB,EAA6B;AACzB,WAAKA,SAAL,CAAe1B,SAAf,CAAyB1B,KAAzB;AACH;;AAED,QAAI,SAAS,KAAKqD,cAAlB,EAAkC;AAC9B,WAAKA,cAAL,CAAoB3B,SAApB,CAA8B1B,KAA9B;AACH;AACJ;;AAED2C,EAAAA,+BAA+B,CAAC/C,GAAD,EAAM;AACjC,SAAKwD,SAAL,CAAeT,+BAAf,CAA+C/C,GAA/C;AACH;;AAEDgD,EAAAA,oBAAoB,CAAC5C,KAAD,EAAQ;AACxB,SAAKoD,SAAL,CAAeR,oBAAf,CAAoC5C,KAApC;AACH;;AAED,QAAM2B,SAAN,GAAkB;AACd,QAAI,SAAS,KAAKyB,SAAlB,EAA6B;AACzB,YAAM,KAAKA,SAAL,CAAezB,SAAf,EAAN;AACH;;AAED,QAAI,SAAS,KAAK0B,cAAlB,EAAkC;AAC9B,WAAKA,cAAL,CAAoB1B,SAApB;AACH;AACJ;;AAED6B,EAAAA,KAAK,GAAG;AACJ,QAAI,SAAS,KAAKvF,KAAlB,EAAyB;AACrB,YAAM4F,IAAI,GAAG,IAAb;AAEA,WAAKR,cAAL,GAAsB,IAAIrF,cAAJ,EAAtB;AACA,WAAKC,KAAL,GAAa,KAAK6F,WAAL,EAAb;AAEA,WAAKV,SAAL,GAAiB,IAAIvB,SAAJ,CAAc,KAAK5D,KAAnB,CAAjB;AACA,WAAKoF,cAAL,CAAoBjF,QAApB,CAA6B,KAAKH,KAAlC;AACH;AACJ;;AAED,QAAM8F,OAAN,GAAgB;AACZ,QAAI,KAAKT,UAAT,EAAqB;AACjB;AACH;;AACD,SAAKA,UAAL,GAAkB,IAAlB,CAJY,CAKZ;AACA;AACA;;AACA,SAAKF,SAAL,CAAezB,SAAf;AACA,SAAK0B,cAAL,CAAoB/E,mBAApB;AACA,UAAM,KAAKL,KAAL,CAAW8F,OAAX,EAAN;AACA,UAAM,KAAKC,KAAL,CAAW,IAAX,CAAN,CAXY,CAWY;;AACxB,SAAKV,UAAL,GAAkB,KAAlB;AACH;;AAEDU,EAAAA,KAAK,CAACC,QAAD,EAAW;AACZ,WAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAUF,QAAV,CAAjC,CAAP;AACH;;AAEDH,EAAAA,WAAW,GAAG;AACV,UAAMD,IAAI,GAAG,IAAb;;AAEA,aAASQ,SAAT,CAAmBpC,GAAnB,EAAwBC,KAAxB,EAA+BC,KAA/B,EAAsC;AAClC0B,MAAAA,IAAI,CAACT,SAAL,CAAepB,WAAf,CAA2BC,GAA3B,EAAgCC,KAAhC,EAAuCC,KAAvC;AACH;;AAED,aAASmC,YAAT,CAAsB3F,QAAtB,EAAgCf,QAAhC,EAA0C0D,MAA1C,EAAkD;AAC9CuC,MAAAA,IAAI,CAACR,cAAL,CAAoBhC,SAApB,CAA8B1C,QAA9B,EAAwCf,QAAxC,EAAkD0D,MAAlD;AACH;;AAED,aAASiD,SAAT,CAAmB5F,QAAnB,EAA6B;AACzB,aAAOkF,IAAI,CAACR,cAAL,CAAoBnE,mBAApB,CAAwCP,QAAxC,CAAP;AACH;;AAED,UAAM6F,MAAM,GAAGrB,eAAe,CAACsB,YAAhB,EAAf;;AACA,YAAQD,MAAR;AACI;AACA;AACA;AACA;AACA,WAAK,WAAL;AACI,cAAME,cAAc,GAAGtH,OAAO,CAAC,kBAAD,CAA9B;;AACA,eAAO,IAAIsH,cAAc,CAACA,cAAnB,CAAkCL,SAAlC,EAA6CC,YAA7C,EAA2DC,SAA3D,EAAsE,IAAtE,CAAP;;AAEJ;AACI,cAAM,IAAII,0CAAJ,CAAmCH,MAAnC,CAAN;AAVR;AAaH;;AAGD,SAAOC,YAAP,GAAsB;AAClB,QAAID,MAAM,GAAGlH,MAAM,CAACsH,qBAAP,CAA6BC,MAA1C;;AACA,QAAI,CAAEL,MAAF,IAAaA,MAAM,KAAK,MAA5B,EAAoC;AAChC,YAAMM,QAAQ,GAAGC,OAAO,CAACC,OAAR,CAAgBzE,KAAhB,CAAsB,GAAtB,CAAjB;AACA,YAAM0E,KAAK,GAAGC,QAAQ,CAACJ,QAAQ,CAAC,CAAD,CAAR,CAAYK,MAAZ,CAAmB,CAAnB,CAAD,CAAtB;;AACA,UAAIF,KAAK,GAAG,CAAZ,EAAe;AACX,cAAM,IAAIG,sCAAJ,CAA+BL,OAAO,CAACC,OAAvC,CAAN;AACH;;AACD,aAAO,WAAP;AACH,KAPD,MAOO;AACH,aAAOR,MAAP;AACH;AACJ;;AAnJwB","sourcesContent":["\"use strict\";\r\n\r\nimport RookError from '../processor/RookError'\r\n\r\nconst assert = require('assert');\r\nconst path = require('path');\r\n\r\nimport {canonizeFileName} from \"../utils\";\r\nimport ScriptWrapper from \"./ScriptWrapper\";\r\nimport { RookElectronInspectFlagNotSet, RookSourceFilePathSuggestion } from '../exceptions';\r\n\r\nimport {logger} from \"../logger\";\r\nconst config = require('../config');\r\n\r\nconst fs = require('fs');\r\nconst CryptoJS = require('crypto-js');\r\nconst SHA256 = require('crypto-js/sha256');\r\n\r\nimport {normalize} from \"./source-map-util\"\r\n\r\nimport {RookUnsupportedEngineSelection, RookUnsupportedNodeVersion} from \"../exceptions\";\r\n\r\n// Note: this is a bit of a heck that is used by V8Debug as well\r\nclass Pos {\r\n\r\n    constructor(filename, lineno, column) {\r\n        this.filename = filename;\r\n        this.lineno = lineno;\r\n        this.column = column;\r\n    }\r\n\r\n    toKey() {\r\n        return this.filename + \"@\" + this.lineno + \"@\" + this.column;\r\n    }\r\n}\r\n\r\nclass ScriptNotifier {\r\n\r\n    constructor() {\r\n        this.debug = null;\r\n\r\n        this.pendingNotifications = {};\r\n\r\n        this.scripts = {};\r\n    }\r\n\r\n    setDebug(debug) {\r\n        this.debug = debug;\r\n        this.loadScripts();\r\n    }\r\n\r\n    clearTrackedScripts() {\r\n        this.scripts = {};\r\n    }\r\n\r\n    getAllMatchInfoByFilename(fileName, includeExternals = false) {\r\n        fileName = canonizeFileName(fileName);\r\n\r\n        let matchesInfos = [];\r\n        for (let scriptId of Object.keys(this.scripts)) {\r\n            const script = this.scripts[scriptId];\r\n            const matchInfo = script.getMatchInfo(fileName, includeExternals);\r\n            if (null !== matchInfo) {\r\n                matchesInfos.push(matchInfo);\r\n            }\r\n        }\r\n\r\n        return matchesInfos;\r\n    }\r\n\r\n    getScriptObjectById(scriptId) {\r\n        if (this.scripts.hasOwnProperty(scriptId)) {\r\n            return this.scripts[scriptId];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getFileContentFromMap(script) {\r\n        try {\r\n            let fileContent = null;\r\n\r\n            if (script.sourceFiles === null || script.sourceFiles === undefined) {\r\n                return null;\r\n            }\r\n\r\n            for (let sourceFile of script.sourceFiles) {\r\n                fileContent = sourceFile.rawSource;\r\n                break;\r\n            }\r\n\r\n            if (fileContent === null || fileContent === undefined) {\r\n                return null;\r\n            }\r\n\r\n            return fileContent;\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    registerNotification(aug, fileName, fileHash, includeExternals, callback, removed) {\r\n        fileName = canonizeFileName(fileName);\r\n\r\n        this.pendingNotifications[aug.augId] = {\r\n            aug : aug,\r\n            fileName: fileName,\r\n            includeExternals: includeExternals,\r\n            execute : callback,\r\n            removed : removed,\r\n            fileHash: fileHash,\r\n        };\r\n\r\n        const matchInfos = this.getAllMatchInfoByFilename(fileName, includeExternals);\r\n        for (let matchInfo of matchInfos){\r\n            callback(matchInfo);\r\n        }\r\n\r\n        if (matchInfos.length === 0) {\r\n            let filename = path.basename(fileName);\r\n            for (let scriptId of Object.keys(this.scripts)) {\r\n                const script = this.scripts[scriptId];\r\n\r\n                let originalFilename = \"\";\r\n                for (let sourceFile of script.sourceFiles) {\r\n                    // Replacing all ../ and ./ since the BE needs absolute path to the suggestion\r\n                    originalFilename = sourceFile.normalizedPath.split(\"../\").join(\"\").split(\"./\").join(\"\").split(\"..\\\\\").join(\"\").split(\".\\\\\").join(\"\");\r\n                    break;\r\n                }\r\n\r\n                let isJsFile = script.filename.endsWith('js') && (originalFilename === \"\" || originalFilename.endsWith('js'));\r\n\r\n                if (path.basename(script.filename) === filename || path.basename(originalFilename) === filename) {\r\n                    let fileContent;\r\n                    let suggestedFileName = originalFilename;\r\n                    try {\r\n                        // Try and fetch the content from the map file.\r\n                        fileContent = this.getFileContentFromMap(script);\r\n                        if (fileContent === null) {\r\n                            if (isJsFile) {\r\n                                // If its a js file - try to read from disk\r\n                                fileContent = fs.readFileSync(script.filename, 'utf8');\r\n                                suggestedFileName = script.filename;\r\n                            } else {\r\n                                continue;\r\n                            }\r\n                        }\r\n                    } catch (e) {\r\n                        continue;\r\n                    }\r\n\r\n                    fileContent = fileContent.replace(/(?:\\r\\n|\\r|\\n)/g, \"\\n\");\r\n                    const currentFileHash = SHA256(fileContent).toString(CryptoJS.enc.Hex);\r\n\r\n                    if (fileHash === currentFileHash) {\r\n                        aug.sendWarning(new RookError(new RookSourceFilePathSuggestion(fileName, suggestedFileName)));\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loadScripts() {\r\n        for (let script of this.debug.scripts()) {\r\n            this.addScript(script.scriptId, script.filename, script.source);\r\n        }\r\n    }\r\n\r\n    addScript(scriptId, filename, source) {\r\n        if (null == filename || \"\" === filename || this.scripts.hasOwnProperty(scriptId)) {\r\n            return;\r\n        }\r\n\r\n        const scriptWrapper = new ScriptWrapper(scriptId, filename, source);\r\n\r\n        for (let augId of Object.keys(this.pendingNotifications)) {\r\n            let notification = this.pendingNotifications[augId];\r\n            const matchInfo = scriptWrapper.getMatchInfo(notification.fileName, notification.includeExternals);\r\n            if (null !== matchInfo) {\r\n                notification.execute(matchInfo);\r\n            } else {\r\n                if (path.basename(filename) === path.basename(notification.fileName)) {\r\n                    let fileContent = source.replace(/(?:\\r\\n|\\r|\\n)/g, \"\\n\");\r\n                    const currentFileHash = SHA256(fileContent).toString(CryptoJS.enc.Hex);\r\n\r\n                    if (notification.fileHash === currentFileHash) {\r\n                        notification.aug.sendWarning(new RookError(new RookSourceFilePathSuggestion(notification.fileName, filename)));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.scripts[scriptId] = scriptWrapper;\r\n    }\r\n\r\n    removeAug(augId) {\r\n        let notification = this.pendingNotifications[augId];\r\n        if (undefined !== notification) {\r\n            notification.removed();\r\n            delete this.pendingNotifications[augId];\r\n        }\r\n    }\r\n\r\n    clearAugs() {\r\n        let augIds = Object.keys(this.pendingNotifications);\r\n        for (let augId of augIds) {\r\n            this.removeAug(augId);\r\n        }\r\n\r\n        this.pendingNotifications = {};\r\n    }\r\n\r\n}\r\n\r\nclass AugHolder {\r\n\r\n    constructor(debug) {\r\n        this.debug = debug;\r\n\r\n        this.breakpoints = {};\r\n        this.positions = {};\r\n    }\r\n\r\n    executeAugs(pos, frame, stack) {\r\n        let augs = this.breakpoints[pos.toKey()];\r\n\r\n        if (!augs) {\r\n            logger.error(\"Aug not found! %s@%d\", pos.filename, pos.lineno)\r\n        } else {\r\n            for (let aug of augs) {\r\n                aug.execute(frame, stack, {});\r\n            }\r\n        }\r\n    }\r\n\r\n    addAug(filename, lineno, column, aug) {\r\n        logger.info(\"Setting breakpoint at %s:%s:%s\", filename, lineno, column);\r\n\r\n        let pos = new Pos(canonizeFileName(filename), lineno, column);\r\n\r\n        if (this.breakpoints.hasOwnProperty(pos.toKey())) {\r\n            this.breakpoints[pos.toKey()].push(aug);\r\n        } else {\r\n            this.debug.setBreak(pos, aug);\r\n            this.breakpoints[pos.toKey()]= [aug];\r\n        }\r\n\r\n        this.positions[aug.augId] = pos;\r\n        aug.setActive();\r\n    }\r\n\r\n    reapplyAugAfterTemporaryRemoval(aug) {\r\n        if (!this.positions.hasOwnProperty(aug.augId)) {\r\n            return;\r\n        }\r\n\r\n        let pos = this.positions[aug.augId];\r\n\r\n        this.debug.setBreak(pos, aug);\r\n    }\r\n\r\n    removeAugTemporarily(augId) {\r\n        if (!this.positions.hasOwnProperty(augId)) {\r\n            return;\r\n        }\r\n\r\n        let pos = this.positions[augId];\r\n\r\n        this.debug.clearBreak(pos);\r\n    }\r\n\r\n    removeAug(augId) {\r\n        if (!this.positions.hasOwnProperty(augId)) {\r\n            return;\r\n        }\r\n\r\n        // Get current augs in position\r\n        let pos = this.positions[augId];\r\n\r\n        let currentAugs = this.breakpoints[pos.toKey()];\r\n\r\n        // Divide augs into delete and keep\r\n        let augsToKeep = [];\r\n        let augsToDelete = [];\r\n        for (let aug of currentAugs) {\r\n            if (aug.augId === augId) {\r\n                augsToDelete.push(aug);\r\n            } else {\r\n                augsToKeep.push(aug);\r\n            }\r\n        }\r\n\r\n        // Update list\r\n        if (augsToKeep.length > 0) {\r\n            this.breakpoints[pos.toKey()] = augsToKeep\r\n        } else {\r\n            this.debug.clearBreak(pos);\r\n            delete this.breakpoints[pos.toKey()];\r\n        }\r\n\r\n        // Update status\r\n        for (let aug of augsToDelete) {\r\n            aug.setRemoved();\r\n        }\r\n\r\n        // Remove from position list\r\n        delete this.positions[augId];\r\n    }\r\n\r\n    async clearAugs() {\r\n        let augIds = Object.keys(this.positions);\r\n        for (let augId of augIds) {\r\n            this.removeAug(augId);\r\n        }\r\n\r\n        this.breakpoints = {};\r\n        this.positions = {};\r\n        await this.debug.clearAllBreaks();\r\n    }\r\n}\r\n\r\nexport class DebuggerService {\r\n\r\n    constructor() {\r\n        this.debug = null;\r\n        this.augHolder = null;\r\n        this.scriptNotifier = null;\r\n        this.restarting = false;\r\n    }\r\n\r\n    async close() {\r\n        this.clearAugs();\r\n\r\n        if (null !== this.debug) {\r\n            const debug = this.debug;\r\n            this.debug = null;\r\n            await debug.close();\r\n        }\r\n    }\r\n\r\n    addAug(filename, matchInfo, lineno, column, aug) {\r\n        this.start();\r\n\r\n        // Note- this is a hack used to simplify testing, script should never be null in production\r\n        if (null === matchInfo) {\r\n            matchInfo = this.scriptNotifier.getAllMatchInfoByFilename(filename)[0];\r\n            assert.notEqual(matchInfo, undefined, \"Script not found\");\r\n        }\r\n\r\n        if (matchInfo.inSourceMap) {\r\n            // Normalizing the filename using the source-map normalize function to avoid filename mismatch\r\n            const pos = matchInfo.script.getGeneratedPosition(normalize(matchInfo.filename), lineno, column);\r\n            lineno = pos.line;\r\n            column = pos.column;\r\n        }\r\n\r\n        this.augHolder.addAug(matchInfo.script.filename, lineno, column, aug);\r\n    }\r\n\r\n    registerNotification(augId, fileName, fileHash, includeExternals, callback, removed) {\r\n        this.start();\r\n\r\n        this.scriptNotifier.registerNotification(augId, fileName, fileHash, includeExternals, callback, removed);\r\n    }\r\n\r\n    removeAug(augId) {\r\n        if (null !== this.augHolder) {\r\n            this.augHolder.removeAug(augId);\r\n        }\r\n\r\n        if (null !== this.scriptNotifier) {\r\n            this.scriptNotifier.removeAug(augId);\r\n        }\r\n    }\r\n\r\n    reapplyAugAfterTemporaryRemoval(aug) {\r\n        this.augHolder.reapplyAugAfterTemporaryRemoval(aug);\r\n    }\r\n\r\n    removeAugTemporarily(augId) {\r\n        this.augHolder.removeAugTemporarily(augId);\r\n    }\r\n\r\n    async clearAugs() {\r\n        if (null !== this.augHolder) {\r\n            await this.augHolder.clearAugs();\r\n        }\r\n\r\n        if (null !== this.scriptNotifier) {\r\n            this.scriptNotifier.clearAugs();\r\n        }\r\n    }\r\n\r\n    start() {\r\n        if (null === this.debug) {\r\n            const self = this;\r\n\r\n            this.scriptNotifier = new ScriptNotifier();\r\n            this.debug = this.getDebugger();\r\n\r\n            this.augHolder = new AugHolder(this.debug);\r\n            this.scriptNotifier.setDebug(this.debug);\r\n        }\r\n    }\r\n\r\n    async restart() {\r\n        if (this.restarting) {\r\n            return;\r\n        }\r\n        this.restarting = true;\r\n        // It may seem like the augs are removed permanently,\r\n        // but since the scriptLoaded callback is called for currently loaded scripts upon debug engine start,\r\n        // they're re-added once the debug engine restarts.\r\n        this.augHolder.clearAugs();\r\n        this.scriptNotifier.clearTrackedScripts();\r\n        await this.debug.restart();\r\n        await this.sleep(5000); // after restarting, sleep for 5s to avoid high CPU usage if for some reason we're in a restart loop\r\n        this.restarting = false;\r\n    }\r\n\r\n    sleep(duration) {\r\n        return new Promise(resolve => setTimeout(resolve, duration));\r\n    }\r\n\r\n    getDebugger() {\r\n        const self = this;\r\n\r\n        function user_line(pos, frame, stack) {\r\n            self.augHolder.executeAugs(pos, frame, stack);\r\n        }\r\n\r\n        function scriptLoaded(scriptId, filename, source) {\r\n            self.scriptNotifier.addScript(scriptId, filename, source);\r\n        }\r\n\r\n        function getScript(scriptId) {\r\n            return self.scriptNotifier.getScriptObjectById(scriptId);\r\n        }\r\n\r\n        const engine = DebuggerService.selectEngine();\r\n        switch (engine) {\r\n            // the code in DebuggerService assumes that the scriptLoaded callback is called\r\n            // whenever the selected engine starts (see restart function in this class). For example, in InspectorDebug,\r\n            // whenever an inspector session starts, the Debugger.scriptParsed event is fired\r\n            // for all currently loaded scripts.\r\n            case \"inspector\":\r\n                const InspectorDebug = require('./InspectorDebug');\r\n                return new InspectorDebug.InspectorDebug(user_line, scriptLoaded, getScript, this);\r\n\r\n            default:\r\n                throw new RookUnsupportedEngineSelection(engine);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    static selectEngine() {\r\n        let engine = config.InstrumentationConfig.ENGINE;\r\n        if (!(engine) || engine === \"auto\") {\r\n            const versions = process.version.split('.');\r\n            const major = parseInt(versions[0].substr(1));\r\n            if (major < 8) {\r\n                throw new RookUnsupportedNodeVersion(process.version);\r\n            }\r\n            return \"inspector\";\r\n        } else {\r\n            return engine;\r\n        }\r\n    }\r\n}\r\n"],"file":"DebuggerService.js"}